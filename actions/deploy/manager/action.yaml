name: Manager Workflow Github Action
description: Manager Deploy Action
inputs:
  IMAGE_TAG:
    description: Image Tag
    required: true
  ENVIRONMENT:
    description: Environment
    required: true
  VAULT_SERVER:
    description: Vault URL
    required: true
  VAULT_TOKEN:
    description: VAULT_TOKEN
    required: true
  VAULT_SECRET_PATH:
    description: Secret Path
    required: true
  VAULT_SECRET_COMMON_PATH:
    description: K8s common Secret Path

runs:
  using: composite
  steps:

  - name: Export Secrets
    uses: hashicorp/vault-action@v2
    with:
      url: https://${{ inputs.VAULT_SERVER }}
      token: ${{ inputs.VAULT_TOKEN }}
      tlsSkipVerify: true
      secrets: |
          ${{ inputs.VAULT_SECRET_PATH }} SSH_PRIVATE_KEY | SSH_PRIVATE_KEY;
          ${{ inputs.VAULT_SECRET_PATH }} MANAGER_NODE_IP | MANAGER_NODE_IP;
          ${{ inputs.VAULT_SECRET_PATH }} DEPLOY_USER | DEPLOY_USER;
          ${{ inputs.VAULT_SECRET_COMMON_PATH }} PROJECT_NAME | PROJECT_NAME;
          ${{ inputs.VAULT_SECRET_COMMON_PATH }} IMAGE_REPOSITORY | IMAGE_REPOSITORY;
          

  - name: Generate .env
    run: |
      ${{ github.action_path }}/scripts/config.sh
    shell: bash
    env:
      VAULT_TOKEN: ${{ inputs.VAULT_TOKEN }}
      VAULT_SERVER: ${{ inputs.VAULT_SERVER }}
      VAULT_SECRET_PATH: ${{ inputs.VAULT_SECRET_PATH }}
      VAULT_SECRET_COMMON_PATH: ${{ inputs.VAULT_SECRET_COMMON_PATH }}
  
  - name: Create docker compose
    run: |
      ansible-playbook -i ansible/inventory ansible/manager.yml
    shell: bash
    
  - name: Install SSH Key
    uses: shimataro/ssh-key-action@v2
    with:
      key: ${{ env.SSH_PRIVATE_KEY }}
      known_hosts: 'SSH Key'
      if_key_exists: replace
  
  - name: Adding Known Hosts
    run: |
      ssh-keyscan -H ${{ env.MANAGER_NODE_IP }} >> ~/.ssh/known_hosts
    shell: bash
  
  - name: Rsync to Manager Node
    run: |
      ssh ${{ env.DEPLOY_USER }}@${{ env.MANAGER_NODE_IP }} "chown -R ${{ env.DEPLOY_USER }}: /opt/${{ env.PROJECT_NAME }}"
      rsync -avPz --exclude ".git" --exclude ".gitignore" ./ root@${{ env.MANAGER_NODE_IP }}:/opt/${{ env.PROJECT_NAME }}
      ssh root@${{ env.MANAGER_NODE_IP }} 'cd /opt/${{ env.PROJECT_NAME }} && docker pull ${{ env.IMAGE_REPOSITORY }}/${{ github.repository }}-${{ inputs.ENVIRONMENT }}:${{ inputs.IMAGE_TAG }}'
      ssh root@${{ env.MANAGER_NODE_IP }} 'cd /opt/${{ env.PROJECT_NAME }} && docker-compose -f docker-compose-manager.yml down && docker-compose -f docker-compose-manager.yml up -d'
    shell: bash
